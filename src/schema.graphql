scalar Date

type Query {
    user(id: Int!): User
    users: [User]
}

type Mutation {
    populateDB(bookingCount: Int): Boolean
    register(name: String!,  userName: String!, email: String!, password: String!): User
    login(email: String!, password: String!): Boolean
    addCarSpace(ownerId: Int!, longitude: String!, latitude: String!, address: String!): CarSpace
    addBooking(userId: Int!, carSpaceId: Int!, start: Date!, end: Date!): Booking
}

type User {
    id: Int!
    name: String!
    userName: String!
    email: String!
    password: String!
    carSpaces: [CarSpace]
    bookings: [Booking]
}

type CarSpace {
    id: Int!
    longitude: String!
    latitude: String!
    address: String!
    owner: User!
    bookings: [Booking]
}

type Booking {
    id: Int!
    carSpace: CarSpace!
    user: User!
    start: Date!
    end: Date!
}
